name: Code Quality Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      
      - name: Format check
        run: |
          deno fmt --check supabase/functions/
      
      - name: Lint TypeScript
        run: |
          deno lint supabase/functions/
      
      - name: SQL Format check
        run: |
          sudo apt-get install -y postgresql-client
          find supabase/migrations -name "*.sql" -exec pg_format --check {} \;
  
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Trivy security scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
  
  test-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      
      - name: Run tests with coverage
        run: |
          cd supabase/functions
          for dir in */; do
            if [ -f "$dir/test.ts" ]; then
              echo "Testing $dir"
              deno test --coverage=coverage "$dir/test.ts"
            fi
          done
      
      - name: Generate coverage report
        run: |
          deno coverage coverage --lcov > coverage.lcov
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.lcov
          flags: edge-functions